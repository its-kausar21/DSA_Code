class Solution {
    public ListNode oddEvenList(ListNode head) {
        ListNode oddHead=new ListNode(-1);
        ListNode oddList=oddHead;
        ListNode evenHead=new ListNode(-1);
        ListNode evenList=evenHead;

        ListNode curr=head;
        ListNode temp;

        while(curr!=null){
            //breaking link of current node
            temp=curr;
            curr=curr.next;
            temp.next=null;

            if(temp.val % 2 !=0){

                oddList.next=temp;
                oddList=temp;

            }
            else{
                evenList.next=temp;
                evenList=temp;
            }

            
        }

       // evenList.next=oddHead.next;
        oddList.next=evenHead.next;
        
        return oddHead.next;


    }
}
